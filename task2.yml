version: "3"
services:
  web:
    image: ursforrerch/cloud-inf-web:1.0.0
    ports:
      - "8080:8080"
    networks:
      - cloud
    environment:
      - API_HOST=api:5000
      - PORT=8080
    depends_on:
      - api
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3
  api:
    image: ursforrerch/cloud-inf-api:1.0.0
    networks:
      - cloud
    environment:
      - DB=postgres://docker:docker@db/dockerdb
      - PORT=5000
    depends_on:
      - db
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3
  db:
    image: ursforrerch/cloud-inf-db:1.0.0
    networks:
      - cloud
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 30s
      retries: 3
    deploy:
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3
networks:
  cloud: